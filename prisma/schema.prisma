// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  name           String
  email          String          @unique
  password       String
  role           Role            @default(STUDENT)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  createdCourses Course[]
  registrations  Registrations[]
}

model Course {
  id            Int             @id @default(autoincrement())
  title         String
  description   String          @db.Text
  image         String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  creatorId     Int
  creator       User            @relation(fields: [creatorId], references: [id], onDelete: Restrict)
  registrations Registrations[]

  @@index([title])
  @@index([creatorId])
}

model Registrations {
  courseId      Int
  userId        Int
  register_date DateTime     @default(now())
  status        CourseStatus @default(ENROLLED)
  user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  course        Course       @relation(fields: [courseId], references: [id], onDelete: Cascade)

  @@id([courseId, userId])
  @@index([userId])
}

enum Role {
  ADMIN
  STUDENT
  COACH
}

enum CourseStatus {
  ENROLLED
  COMPLETED
  CANCELLED
}
